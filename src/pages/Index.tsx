import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Badge } from '@/components/ui/badge';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [calculatorData, setCalculatorData] = useState({
    format: 'openbar',
    // Open Bar
    guests: 100,
    openbarTariff: 'classic',
    // Revenue Share
    revenueGuests: 200,
    avgTicket: 2000,
    partnerShare: 25,
    // Fix-fee
    barLines: 2,
    hours: 5,
    peak: 0,
    regionFee: 0,
    // –ö–∞–ª—å—è–Ω
    hookahs: 0
  });

  const calculateCost = () => {
    switch (calculatorData.format) {
      case 'openbar': {
        const tariffs = { light: 1800, classic: 2450, premium: 3200 };
        return calculatorData.guests * tariffs[calculatorData.openbarTariff];
      }
      case 'minimal': {
        return 150000 + calculatorData.guests * 800;
      }
      case 'revenue': {
        const revenue = calculatorData.revenueGuests * calculatorData.avgTicket;
        const organizerProfit = revenue * (calculatorData.partnerShare / 100);
        return { revenue, organizerProfit };
      }
      case 'fixfee': {
        const baseHours = 5;
        const baseLine5h = 55000;
        const extraHourFee = 6000;
        const addLineDisc = 0.15;
        const roundTo = 1000;
        
        const peak = calculatorData.peak / 100;
        const extraHours = Math.max(0, calculatorData.hours - baseHours);
        
        let pricePerLine = baseLine5h * (1 + peak) + extraHours * extraHourFee + calculatorData.regionFee;
        let total = pricePerLine;
        if (calculatorData.barLines > 1) {
          total += (calculatorData.barLines - 1) * pricePerLine * (1 - addLineDisc);
        }
        
        return Math.ceil(total / roundTo) * roundTo;
      }
      case 'hookah': {
        return calculatorData.hookahs * 3500;
      }
      default:
        return 0;
    }
  };

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('ru-RU').format(Math.round(price)) + ' ‚ÇΩ';
  };

  const getModelDescription = (format: string) => {
    const descriptions = {
      openbar: "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –≥–æ—Å—Ç—è. –ö–ª–∏–µ–Ω—Ç –∑–Ω–∞–µ—Ç —Ç–æ—á–Ω—É—é —Å—É–º–º—É –∑–∞—Ä–∞–Ω–µ–µ",
      minimal: "–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ + –¥–æ–ø–ª–∞—Ç–∞ –ø–æ —Ñ–∞–∫—Ç—É –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è",
      revenue: "–î–µ–ª–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏ –º–µ–∂–¥—É –≤–∞–º–∏ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ñ–µ—Å—Ç–∏–≤–∞–ª–µ–π",
      fixfee: "–í—ã–µ–∑–¥ –±–∞—Ä–º–µ–Ω–æ–≤, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, —Ä–∞–±–æ—Ç–∞. –ê–ª–∫–æ–≥–æ–ª—å –∫–ª–∏–µ–Ω—Ç–∞",
      hookah: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –±–∞—Ä—É"
    };
    return descriptions[format] || "";
  };

  return (
    <div className="min-h-screen bg-white overflow-x-hidden">
      {/* Hero Section */}
      <section className="relative bg-gradient-to-br from-premium-black via-gray-900 to-premium-black text-white min-h-screen flex items-center">
        <div 
          className="absolute inset-0 opacity-20"
          style={{
            backgroundImage: `url(/img/d7b3b53e-b36a-4444-b582-6d67bc88c603.jpg)`,
            backgroundSize: 'cover',
            backgroundPosition: 'center'
          }}
        />
        <div className="container mx-auto px-2 sm:px-4 relative z-10 w-full max-w-full">
          <div className="max-w-4xl mx-auto text-center">
            <h1 className="text-3xl sm:text-5xl md:text-7xl font-bold mb-6 bg-gradient-to-r from-gold via-gold-light to-gold bg-clip-text text-transparent">
              –ë–∞—Ä-–∫–µ–π—Ç–µ—Ä–∏–Ω–≥ –∏ –∫–∞–ª—å—è–Ω –ø–æ–¥ –∫–ª—é—á
            </h1>
            <h2 className="text-xl md:text-2xl mb-8 text-gray-300 font-light">
              –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ
            </h2>
            <div className="flex flex-wrap justify-center gap-2 sm:gap-4 mb-12 px-2">
              <Badge variant="outline" className="border-gold text-gold text-base px-4 py-2">
                <Icon name="Shield" className="w-4 h-4 mr-2" />
                –õ–∏—Ü–µ–Ω–∑–∏—è
              </Badge>
              <Badge variant="outline" className="border-gold text-gold text-base px-4 py-2">
                <Icon name="Database" className="w-4 h-4 mr-2" />
                –ï–ì–ê–ò–°
              </Badge>
              <Badge variant="outline" className="border-gold text-gold text-base px-4 py-2">
                <Icon name="FileText" className="w-4 h-4 mr-2" />
                –ê–∫—Ç—ã/–±–µ–∑–Ω–∞–ª
              </Badge>
              <Badge variant="outline" className="border-gold text-gold text-base px-4 py-2">
                <Icon name="Star" className="w-4 h-4 mr-2" />
                White-label
              </Badge>
            </div>
            <p className="text-lg mb-10 text-gray-300 max-w-3xl mx-auto leading-relaxed">
              –õ–∏—Ü–µ–Ω–∑–∏—è –∏ –ï–ì–ê–ò–° ‚Ä¢ –ê–ª–∫–æ–≥–æ–ª—å –ø–æ–¥ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é ‚Ä¢ –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞ 2 —á–∞—Å–∞ ‚Ä¢ White-label –ø–æ–¥ –≤–∞—à –±—Ä–µ–Ω–¥
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" className="bg-gold hover:bg-gold-dark text-premium-black font-semibold px-8 py-4">
                <Icon name="Calculator" className="w-5 h-5 mr-2" />
                –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ 10 –º–∏–Ω—É—Ç
              </Button>
              <Button size="lg" variant="outline" className="border-gold text-gold hover:bg-gold hover:text-premium-black px-8 py-4">
                <Icon name="MessageCircle" className="w-5 h-5 mr-2" />
                –ü–æ–ª—É—á–∏—Ç—å —Å–º–µ—Ç—É –≤ Telegram
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* –î–ª—è –∫–æ–≥–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º */}
      <section className="py-20 bg-premium-gray">
        <div className="container mx-auto px-2 sm:px-4 w-full max-w-full">
          <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 text-premium-black">
            –†–µ—à–∞–µ–º –∑–∞–¥–∞—á–∏ –ª—é–±–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∏–≤–µ–Ω—Ç–∞
          </h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {[
              { emoji: "üé§", title: "–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã", desc: "–±–∞—Ä –ø–æ–¥ –∫–ª—é—á —Å –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å—é" },
              { emoji: "üèõ", title: "–ü–ª–æ—â–∞–¥–∫–∏/–ª–æ—Ñ—Ç—ã", desc: "–¥–æ–º–∞—à–Ω–∏–π –±–∞—Ä-–ø–∞—Ä—Ç–Ω—ë—Ä —Å –∫–æ–º–∏—Å—Å–∏–µ–π" },
              { emoji: "üé∂", title: "–ö–æ–Ω—Ü–µ—Ä—Ç—ã/—Ñ–µ—Å—Ç–∏–≤–∞–ª–∏", desc: "revenue-share, wristband-—Å–∏—Å—Ç–µ–º–∞" },
              { emoji: "üè¢", title: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã –∏ MICE", desc: "–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã, —Ä–∞–±–æ—Ç–∞ –ø–æ –±–µ–∑–Ω–∞–ª—É" },
              { emoji: "üíç", title: "–°–≤–∞–¥—å–±—ã/–≤–µ—á–µ—Ä–∏–Ω–∫–∏", desc: "—Å—Ç–∏–ª—å, –∞–≤—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏, –∫–∞–ª—å—è–Ω-–∑–æ–Ω–∞" }
            ].map((item, index) => (
              <Card key={index} className="hover:shadow-xl transition-shadow border-0 bg-white">
                <CardHeader className="text-center">
                  <div className="text-4xl mb-4">{item.emoji}</div>
                  <CardTitle className="text-xl font-semibold text-premium-black">{item.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-600 text-center">{item.desc}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-2 sm:px-4 w-full max-w-full">
          <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 text-premium-black">
            5 –º–æ–¥–µ–ª–µ–π —Ä–∞–±–æ—Ç—ã –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏
          </h2>
          <div className="max-w-4xl mx-auto px-2 sm:px-0">
            <Card className="p-8 border-2 border-gold/20 shadow-2xl">
              <CardHeader className="text-center">
                <CardTitle className="text-2xl text-premium-black mb-4">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏</CardTitle>
                <p className="text-gray-600">{getModelDescription(calculatorData.format)}</p>
              </CardHeader>
              <CardContent>
                <Tabs value={calculatorData.format} onValueChange={(value) => setCalculatorData({...calculatorData, format: value})}>
                  <TabsList className="grid w-full grid-cols-2 sm:grid-cols-5 mb-8">
                    <TabsTrigger value="openbar">Open Bar</TabsTrigger>
                    <TabsTrigger value="minimal">–ú–∏–Ω–∏–º–∞–ª–∫–∞</TabsTrigger>
                    <TabsTrigger value="revenue">Revenue</TabsTrigger>
                    <TabsTrigger value="fixfee">Fix-fee</TabsTrigger>
                    <TabsTrigger value="hookah">–ö–∞–ª—å—è–Ω</TabsTrigger>
                  </TabsList>
                  
                  <TabsContent value="openbar">
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <div>
                          <Label htmlFor="guests" className="text-base font-medium">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π</Label>
                          <Input
                            id="guests"
                            type="number"
                            value={calculatorData.guests}
                            onChange={(e) => setCalculatorData({...calculatorData, guests: parseInt(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                      </div>
                      
                      <div className="bg-gold/10 p-6 rounded-lg flex flex-col justify-center">
                        <div className="text-center">
                          <p className="text-lg text-gray-600 mb-4">–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞:</p>
                          <p className="text-4xl font-bold text-gold mb-6">{formatPrice(typeof calculateCost() === 'number' ? calculateCost() : 0)}</p>
                          <Button className="bg-gold hover:bg-gold-dark text-premium-black w-full">
                            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é —Å–º–µ—Ç—É
                          </Button>
                        </div>
                      </div>
                    </div>
                    
                    <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 mt-8">
                      {[
                        { key: 'light', name: 'Light', price: 1800 },
                        { key: 'classic', name: 'Classic', price: 2450 },
                        { key: 'premium', name: 'Premium', price: 3200 }
                      ].map((tariff) => (
                        <Card 
                          key={tariff.key}
                          className={`cursor-pointer transition-all border-2 ${
                            calculatorData.openbarTariff === tariff.key 
                              ? 'border-gold bg-gold/10' 
                              : 'border-gray-200 hover:border-gold/50'
                          }`}
                          onClick={() => setCalculatorData({...calculatorData, openbarTariff: tariff.key})}
                        >
                          <CardContent className="text-center p-6">
                            <h3 className="font-bold text-lg mb-2">{tariff.name} - {formatPrice(tariff.price)}</h3>
                            <p className="text-gray-600">–∑–∞ –≥–æ—Å—Ç—è</p>
                          </CardContent>
                        </Card>
                      ))}
                    </div>
                  </TabsContent>

                  <TabsContent value="revenue">
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <div>
                          <Label htmlFor="revenueGuests" className="text-base font-medium">–û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π</Label>
                          <Input
                            id="revenueGuests"
                            type="number"
                            value={calculatorData.revenueGuests}
                            onChange={(e) => setCalculatorData({...calculatorData, revenueGuests: parseInt(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                        <div>
                          <Label htmlFor="avgTicket" className="text-base font-medium">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ (‚ÇΩ)</Label>
                          <Input
                            id="avgTicket"
                            type="number"
                            value={calculatorData.avgTicket}
                            onChange={(e) => setCalculatorData({...calculatorData, avgTicket: parseFloat(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                        <div>
                          <Label htmlFor="partnerShare" className="text-base font-medium">–í–∞—à–∞ –¥–æ–ª—è (%)</Label>
                          <Input
                            id="partnerShare"
                            type="number"
                            max="30"
                            value={calculatorData.partnerShare}
                            onChange={(e) => {
                              const value = Math.min(30, Math.max(0, parseFloat(e.target.value) || 0));
                              setCalculatorData({...calculatorData, partnerShare: value});
                            }}
                            className="mt-2"
                            placeholder="–¥–æ 30%"
                          />
                        </div>
                      </div>
                      
                      <div className="bg-gold/10 p-6 rounded-lg">
                        <h3 className="font-semibold mb-4">–†–∞—Å—á—ë—Ç –≤—ã—Ä—É—á–∫–∏:</h3>
                        {(() => {
                          const results = calculateCost();
                          if (typeof results === 'object') {
                            return (
                              <div className="space-y-2">
                                <div className="flex justify-between">
                                  <span>–û–±—â–∏–π –æ–±–æ—Ä–æ—Ç:</span>
                                  <span className="font-semibold">{formatPrice(results.revenue)}</span>
                                </div>
                                <hr className="my-2" />
                                <div className="flex justify-between text-lg font-bold">
                                  <span>–í–∞—à–∞ –ø—Ä–∏–±—ã–ª—å:</span>
                                  <span className="text-green-600">{formatPrice(results.organizerProfit)}</span>
                                </div>
                              </div>
                            );
                          }
                          return null;
                        })()}
                      </div>
                    </div>
                  </TabsContent>

                  <TabsContent value="fixfee">
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <div>
                          <Label htmlFor="barLines" className="text-base font-medium">–õ–∏–Ω–∏–∏ –±–∞—Ä–∞</Label>
                          <Input
                            id="barLines"
                            type="number"
                            value={calculatorData.barLines}
                            onChange={(e) => setCalculatorData({...calculatorData, barLines: parseInt(e.target.value) || 1})}
                            className="mt-2"
                          />
                        </div>
                        <div>
                          <Label htmlFor="hours" className="text-base font-medium">–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã</Label>
                          <Input
                            id="hours"
                            type="number"
                            value={calculatorData.hours}
                            onChange={(e) => setCalculatorData({...calculatorData, hours: parseInt(e.target.value) || 5})}
                            className="mt-2"
                          />
                        </div>
                        <div>
                          <Label htmlFor="peak" className="text-base font-medium">–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ (%)</Label>
                          <select 
                            value={calculatorData.peak}
                            onChange={(e) => setCalculatorData({...calculatorData, peak: parseFloat(e.target.value)})}
                            className="mt-2 w-full p-2 border rounded"
                          >
                            <option value={0}>–ë—É–¥–Ω–∏ (0%)</option>
                            <option value={10}>–ü—Ç/–°–± (+10%)</option>
                            <option value={15}>–ù–æ—á—å/–ü—Ä–∞–∑–¥–Ω–∏–∫–∏ (+15%)</option>
                          </select>
                        </div>
                        <div>
                          <Label htmlFor="regionFee" className="text-base font-medium">–ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –ª–æ–∫–∞—Ü–∏—é (‚ÇΩ)</Label>
                          <Input
                            id="regionFee"
                            type="number"
                            value={calculatorData.regionFee}
                            onChange={(e) => setCalculatorData({...calculatorData, regionFee: parseFloat(e.target.value) || 0})}
                            className="mt-2"
                            placeholder="0 - –≤ –≥–æ—Ä–æ–¥–µ, 10000 - –∑–∞ –≥–æ—Ä–æ–¥–æ–º"
                          />
                        </div>
                      </div>
                      
                      <div className="bg-gold/10 p-6 rounded-lg flex flex-col justify-center">
                        <div className="text-center">
                          <p className="text-lg text-gray-600 mb-4">–°—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–µ–∑–¥–∞:</p>
                          <p className="text-4xl font-bold text-gold mb-6">{formatPrice(typeof calculateCost() === 'number' ? calculateCost() : 0)}</p>
                          <Button className="bg-gold hover:bg-gold-dark text-premium-black w-full">
                            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é —Å–º–µ—Ç—É
                          </Button>
                        </div>
                      </div>
                    </div>
                  </TabsContent>

                  <TabsContent value="minimal">
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <div>
                          <Label htmlFor="guests" className="text-base font-medium">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π</Label>
                          <Input
                            id="guests"
                            type="number"
                            value={calculatorData.guests}
                            onChange={(e) => setCalculatorData({...calculatorData, guests: parseInt(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                      </div>
                      
                      <div className="bg-gold/10 p-6 rounded-lg flex flex-col justify-center">
                        <div className="text-center">
                          <p className="text-lg text-gray-600 mb-4">–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</p>
                          <p className="text-4xl font-bold text-gold mb-6">{formatPrice(typeof calculateCost() === 'number' ? calculateCost() : 0)}</p>
                          <Button className="bg-gold hover:bg-gold-dark text-premium-black w-full">
                            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é —Å–º–µ—Ç—É
                          </Button>
                        </div>
                      </div>
                    </div>
                  </TabsContent>

                  <TabsContent value="hookah">
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <div>
                          <Label htmlFor="hookahs" className="text-base font-medium">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª—å—è–Ω–æ–≤</Label>
                          <Input
                            id="hookahs"
                            type="number"
                            value={calculatorData.hookahs}
                            onChange={(e) => setCalculatorData({...calculatorData, hookahs: parseInt(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                      </div>
                      
                      <div className="bg-gold/10 p-6 rounded-lg flex flex-col justify-center">
                        <div className="text-center">
                          <p className="text-lg text-gray-600 mb-4">–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–ª—å—è–Ω–æ–≤:</p>
                          <p className="text-4xl font-bold text-gold mb-6">{formatPrice(typeof calculateCost() === 'number' ? calculateCost() : 0)}</p>
                          <Button className="bg-gold hover:bg-gold-dark text-premium-black w-full">
                            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é —Å–º–µ—Ç—É
                          </Button>
                        </div>
                      </div>
                    </div>
                  </TabsContent>
                  

                </Tabs>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* –ö–µ–π—Å—ã */}
      <section className="py-20 bg-premium-gray">
        <div className="container mx-auto px-2 sm:px-4 w-full max-w-full">
          <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 text-premium-black">
            –ù–∞—à –æ–ø—ã—Ç –Ω–∞ —Ü–∏—Ñ—Ä–∞—Ö
          </h2>
          <div className="grid md:grid-cols-3 gap-8">
            {[
              { title: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤", guests: "300 –≥–æ—Å—Ç–µ–π", details: "3 –ª–∏–Ω–∏–∏ –±–∞—Ä–∞, 5 —á–∞—Å–æ–≤", result: "—Å—Ä–µ–¥–Ω–∏–π —á–µ–∫ 2,450 ‚ÇΩ/–≥–æ—Å—Ç—å", revenue: "735,000 ‚ÇΩ" },
              { title: "–°–≤–∞–¥—å–±–∞", guests: "120 –≥–æ—Å—Ç–µ–π", details: "open bar Classic", result: "–≤—ã—Ä—É—á–∫–∞ 420,000 ‚ÇΩ", revenue: "–º–∞—Ä–∂–∞ 32%" },
              { title: "–§–µ—Å—Ç–∏–≤–∞–ª—å", guests: "700 –≥–æ—Å—Ç–µ–π", details: "revenue-share –º–æ–¥–µ–ª—å", result: "–≤—ã—Ä—É—á–∫–∞ 1,2 –º–ª–Ω ‚ÇΩ", revenue: "–ø–∞—Ä—Ç–Ω—ë—Ä –ø–æ–ª—É—á–∏–ª 30%" }
            ].map((caseItem, index) => (
              <Card key={index} className="hover:shadow-xl transition-shadow bg-white border-0">
                <CardHeader>
                  <div className="flex items-center justify-between">
                    <CardTitle className="text-xl text-premium-black">{caseItem.title}</CardTitle>
                    <Badge variant="secondary" className="bg-gold/10 text-gold border-0">
                      {caseItem.guests}
                    </Badge>
                  </div>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-600 mb-4">{caseItem.details}</p>
                  <div className="space-y-2">
                    <p className="text-sm text-gray-700">{caseItem.result}</p>
                    <p className="text-lg font-semibold text-gold">{caseItem.revenue}</p>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* –ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-2 sm:px-4 w-full max-w-full">
          <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 text-premium-black">
            6 —à–∞–≥–æ–≤ –¥–æ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –±–∞—Ä–∞ –Ω–∞ –≤–∞—à–µ–º –∏–≤–µ–Ω—Ç–µ
          </h2>
          <div className="max-w-4xl mx-auto px-2 sm:px-0">
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {[
                { step: "1", title: "–ó–∞–ø–æ–ª–Ω—è–µ—Ç–µ –±—Ä–∏—Ñ", icon: "FileText" },
                { step: "2", title: "–ü–æ–ª—É—á–∞–µ—Ç–µ —Å–º–µ—Ç—É –∑–∞ 10 –º–∏–Ω—É—Ç", icon: "Clock" },
                { step: "3", title: "–î–æ–≥–æ–≤–æ—Ä, –ï–ì–ê–ò–°, –∞–∫—Ç—ã", icon: "Shield" },
                { step: "4", title: "–ó–∞–∫—É–ø–∫–∞/–ª–æ–≥–∏—Å—Ç–∏–∫–∞", icon: "Truck" },
                { step: "5", title: "–†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞ 2 —á–∞—Å–∞", icon: "Zap" },
                { step: "6", title: "–û—Ç—á—ë—Ç, –∞–∫—Ç—ã, –≤–æ–∑–≤—Ä–∞—Ç –æ—Å—Ç–∞—Ç–∫–æ–≤", icon: "CheckCircle" }
              ].map((item, index) => (
                <Card key={index} className="text-center p-6 hover:shadow-lg transition-shadow border-gold/20">
                  <CardContent className="pt-6">
                    <div className="w-16 h-16 bg-gold rounded-full flex items-center justify-center mx-auto mb-4">
                      <span className="text-2xl font-bold text-premium-black">{item.step}</span>
                    </div>
                    <Icon name={item.icon as any} className="w-8 h-8 mx-auto mb-4 text-gold" />
                    <p className="font-semibold text-premium-black">{item.title}</p>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section className="py-20 bg-premium-gray">
        <div className="container mx-auto px-2 sm:px-4 w-full max-w-full">
          <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 text-premium-black">
            –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
          </h2>
          <div className="max-w-3xl mx-auto">
            <Accordion type="single" collapsible>
              {[
                { q: "–ú–æ–∂–Ω–æ –ª–∏ —Å–æ —Å–≤–æ–∏–º –∞–ª–∫–æ–≥–æ–ª–µ–º?", a: "–î–∞, –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ –º–æ–¥–µ–ª–∏ Fix-fee - –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –∞–ª–∫–æ–≥–æ–ª—å –æ—Å—Ç–∞–µ—Ç—Å—è –≤–∞—à–∏–º." },
                { q: "–ï—Å—Ç—å –ª–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞?", a: "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 50,000 —Ä—É–±–ª–µ–π –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –æ—Ç 50 –≥–æ—Å—Ç–µ–π." },
                { q: "–°–∫–æ–ª—å–∫–æ –±–∞—Ä–º–µ–Ω–æ–≤ –Ω—É–∂–Ω–æ –Ω–∞ 100 –≥–æ—Å—Ç–µ–π?", a: "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º 2 –±–∞—Ä–º–µ–Ω–∞ –Ω–∞ 100 –≥–æ—Å—Ç–µ–π –ø—Ä–∏ 2-—Ö –ª–∏–Ω–∏—è—Ö –±–∞—Ä–∞ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è." },
                { q: "–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –≤—ã–µ–∑–∂–∞–µ—Ç–µ?", a: "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –≤—ã–µ–∑–¥ –≤–æ–∑–º–æ–∂–µ–Ω –≤ –¥–µ–Ω—å –æ–±—Ä–∞—â–µ–Ω–∏—è. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ - –∑–∞ 2-3 –¥–Ω—è –¥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è." },
                { q: "–ú–æ–∂–Ω–æ –ª–∏ –∫–∞–ª—å—è–Ω –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏?", a: "–î–∞, –Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–Ω—ã—Ö –∑–æ–Ω–∞—Ö —Å –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–µ–π —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º." }
              ].map((item, index) => (
                <AccordionItem key={index} value={`item-${index}`}>
                  <AccordionTrigger className="text-left text-premium-black font-medium">
                    {item.q}
                  </AccordionTrigger>
                  <AccordionContent className="text-gray-600">
                    {item.a}
                  </AccordionContent>
                </AccordionItem>
              ))}
            </Accordion>
          </div>
        </div>
      </section>

      {/* –ü–∞—Ä—Ç–Ω—ë—Ä–∞–º */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-2 sm:px-4 w-full max-w-full">
          <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 text-premium-black">
            –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã –∏ –ø–ª–æ—â–∞–¥–∫–∏: –≤—ã–≥–æ–¥–Ω–æ–µ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ
          </h2>
          <div className="max-w-4xl mx-auto grid md:grid-cols-2 gap-8">
            <div className="space-y-8">
              {[
                { title: "–ö–æ–º–∏—Å—Å–∏—è 10‚Äì15% —Å –∑–∞–∫–∞–∑–∞", icon: "Percent" },
                { title: "–≠–∫—Å–∫–ª—é–∑–∏–≤/white-label", icon: "Star" },
                { title: "–ë—ã—Å—Ç—Ä—ã–µ —Å–º–µ—Ç—ã –∏ –≤—ã–µ–∑–¥ ¬´–¥–µ–Ω—å-–≤-–¥–µ–Ω—å¬ª", icon: "Zap" },
                { title: "SLA: –æ—Ç–≤–µ—Ç ‚â§15 –º–∏–Ω, —Å–º–µ—Ç–∞ ‚â§2 —á, —Å–µ—Ç–∞–ø ‚â§2 —á", icon: "Clock" }
              ].map((item, index) => (
                <div key={index} className="flex items-center space-x-4">
                  <div className="w-12 h-12 bg-gold rounded-full flex items-center justify-center flex-shrink-0">
                    <Icon name={item.icon as any} className="w-6 h-6 text-premium-black" />
                  </div>
                  <p className="text-lg text-premium-black font-medium">{item.title}</p>
                </div>
              ))}
            </div>
            <div 
              className="bg-cover bg-center rounded-lg min-h-[400px] flex items-end"
              style={{
                backgroundImage: `url(/img/4a95a75f-668a-4d8d-a85e-aeb483e577a7.jpg)`
              }}
            >
              <div className="bg-premium-black/80 text-white p-6 m-6 rounded-lg w-full">
                <h3 className="text-xl font-semibold mb-4">–°—Ç–∞–Ω—å—Ç–µ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º</h3>
                <Button className="bg-gold hover:bg-gold-dark text-premium-black w-full">
                  –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
                </Button>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* –§–∏–Ω–∞–ª—å–Ω—ã–π CTA */}
      <section className="py-20 bg-gradient-to-br from-premium-black via-gray-900 to-premium-black text-white">
        <div className="container mx-auto px-4 text-center">
          <h2 className="text-4xl md:text-5xl font-bold mb-8 bg-gradient-to-r from-gold via-gold-light to-gold bg-clip-text text-transparent">
            –ì–æ—Ç–æ–≤—ã —Å–¥–µ–ª–∞—Ç—å –±–∞—Ä –Ω–∞ –≤–∞—à–µ–º —Å–æ–±—ã—Ç–∏–∏?
          </h2>
          <p className="text-xl mb-10 text-gray-300 max-w-2xl mx-auto">
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–º–µ—Ç—É –∑–∞ 10 –º–∏–Ω—É—Ç
          </p>
          <div className="max-w-md mx-auto space-y-4">
            <Input placeholder="–í–∞—à–µ –∏–º—è" className="bg-white/10 border-gold/30 text-white placeholder:text-gray-400" />
            <Input placeholder="–¢–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ Telegram" className="bg-white/10 border-gold/30 text-white placeholder:text-gray-400" />
            <Input placeholder="–î–∞—Ç–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è" className="bg-white/10 border-gold/30 text-white placeholder:text-gray-400" />
            <Button size="lg" className="w-full bg-gold hover:bg-gold-dark text-premium-black font-semibold py-4">
              <Icon name="Calculator" className="w-5 h-5 mr-2" />
              –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –º–æ–π –∏–≤–µ–Ω—Ç
            </Button>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-premium-black text-white py-12">
        <div className="container mx-auto px-2 sm:px-4 w-full max-w-full">
          <div className="grid md:grid-cols-3 gap-8">
            <div>
              <h3 className="text-xl font-semibold mb-4 text-gold">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
              <div className="space-y-2 text-gray-300">
                <p>+7 (812) 123-45-67</p>
                <p>info@barservice.ru</p>
                <p>–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</p>
              </div>
            </div>
            <div>
              <h3 className="text-xl font-semibold mb-4 text-gold">–£—Å–ª—É–≥–∏</h3>
              <div className="space-y-2 text-gray-300">
                <p>–ë–∞—Ä-–∫–µ–π—Ç–µ—Ä–∏–Ω–≥</p>
                <p>–ö–∞–ª—å—è–Ω-—Å–µ—Ä–≤–∏—Å</p>
                <p>White-label —Ä–µ—à–µ–Ω–∏—è</p>
              </div>
            </div>
            <div>
              <h3 className="text-xl font-semibold mb-4 text-gold">–î–æ–∫—É–º–µ–Ω—Ç—ã</h3>
              <div className="space-y-2 text-gray-300">
                <p>–õ–∏—Ü–µ–Ω–∑–∏—è</p>
                <p>–ï–ì–ê–ò–°</p>
                <p>–î–æ–≥–æ–≤–æ—Ä—ã –∏ –∞–∫—Ç—ã</p>
              </div>
            </div>
          </div>
          <div className="border-t border-gray-800 mt-8 pt-8 text-center text-gray-400">
            <p>&copy; 2024 Premium Bar Service. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;