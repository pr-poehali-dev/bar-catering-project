import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Badge } from '@/components/ui/badge';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [calculatorData, setCalculatorData] = useState({
    format: 'openbar',
    // Open Bar
    guests: 100,
    openbarTariff: 'classic',
    // Revenue Share
    revenueGuests: 200,
    avgTicket: 2000,
    partnerShare: 35,
    // Fix-fee 
    barLines: 2,
    hours: 5,
    peak: 0, // 0=–±—É–¥–Ω–∏, 0.10=–ø—Ç/—Å–±, 0.15=–Ω–æ—á—å/–ø—Ä–∞–∑–¥–Ω–∏–∫–∏
    regionFee: 0,
    // –ö–∞–ª—å—è–Ω
    hookahQty: 0,
    hookahPrice: 3000
  });

  const calculateCost = () => {
    switch (calculatorData.format) {
      case 'openbar': {
        const tariffs = { light: 1800, classic: 2450, premium: 3200 };
        return calculatorData.guests * tariffs[calculatorData.openbarTariff];
      }
      case 'minimal': {
        return 150000 + calculatorData.guests * 800;
      }
      case 'revenue': {
        const revenue = calculatorData.revenueGuests * calculatorData.avgTicket;
        const partnerProfit = revenue * (calculatorData.partnerShare / 100);
        const ourProfit = revenue - partnerProfit;
        return { revenue, partnerProfit, ourProfit };
      }
      case 'fixfee': {
        // –§–æ—Ä–º—É–ª–∞ Fix-fee
        const baseHours = 5;
        const baseLine5h = 55000;
        const extraHourFee = 6000;
        const addLineDisc = 0.15;
        const roundTo = 1000;
        
        const peak = calculatorData.peak / 100;
        const extraHours = Math.max(0, calculatorData.hours - baseHours);
        
        let pricePerLine = baseLine5h * (1 + peak) + extraHours * extraHourFee + calculatorData.regionFee;
        
        let total = pricePerLine;
        if (calculatorData.barLines > 1) {
          total += (calculatorData.barLines - 1) * pricePerLine * (1 - addLineDisc);
        }
        
        // –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö –¥–æ —Ç—ã—Å—è—á–∏
        pricePerLine = Math.ceil(pricePerLine / roundTo) * roundTo;
        total = Math.ceil(total / roundTo) * roundTo;
        
        return total;
      }
      case 'hookah': {
        return calculatorData.hookahQty * calculatorData.hookahPrice;
      }
      default:
        return 0;
    }
  };

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('ru-RU').format(Math.round(price)) + ' ‚ÇΩ';
  };

  const getModelDescription = (format: string) => {
    const descriptions = {
      openbar: "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –≥–æ—Å—Ç—è. –ö–ª–∏–µ–Ω—Ç –∑–Ω–∞–µ—Ç —Ç–æ—á–Ω—É—é —Å—É–º–º—É –∑–∞—Ä–∞–Ω–µ–µ",
      minimal: "–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ + –¥–æ–ø–ª–∞—Ç–∞ –ø–æ —Ñ–∞–∫—Ç—É –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è",
      revenue: "–î–µ–ª–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏ –º–µ–∂–¥—É –≤–∞–º–∏ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ñ–µ—Å—Ç–∏–≤–∞–ª–µ–π",
      fixfee: "–í—ã–µ–∑–¥ –±–∞—Ä–º–µ–Ω–æ–≤, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, —Ä–∞–±–æ—Ç–∞. –ê–ª–∫–æ–≥–æ–ª—å –∫–ª–∏–µ–Ω—Ç–∞",
      hookah: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –±–∞—Ä—É"
    };
    return descriptions[format] || "";
  };

  return (
    <div className="min-h-screen bg-white overflow-x-hidden">
      {/* Hero —Å–µ–∫—Ü–∏—è */}
      <section className="relative bg-premium-black text-white py-32 px-2 sm:px-4">
        <div className="absolute inset-0 bg-gradient-to-br from-premium-black to-gray-900"></div>
        <div className="container mx-auto text-center relative z-10 max-w-4xl">
          <h1 className="text-5xl md:text-7xl font-bold mb-8 leading-tight">
            –í–∏–ø –±–∞—Ä-—Å–µ—Ä–≤–∏—Å –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
          </h1>
          <p className="text-xl md:text-2xl mb-12 text-gray-300 leading-relaxed">
            –ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –∞–ª–∫–æ–≥–æ–ª—å –∏ –∞–≤—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button size="lg" className="bg-gold hover:bg-gold-dark text-premium-black font-semibold px-8 py-4 text-lg">
              –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å
            </Button>
            <Button size="lg" variant="outline" className="border-gold text-gold hover:bg-gold hover:text-premium-black font-semibold px-8 py-4 text-lg">
              –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç
            </Button>
          </div>
        </div>
      </section>

      {/* –û –Ω–∞—Å —Å–µ–∫—Ü–∏—è */}
      <section className="py-20 bg-gray-50">
        <div className="container mx-auto px-2 sm:px-4">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 text-premium-black">
              –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å
            </h2>
            <div className="grid md:grid-cols-3 gap-8">
              {[
                { icon: "Award", title: "–ü—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ", desc: "–¢–æ–ª—å–∫–æ –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–ª–∫–æ–≥–æ–ª—å –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤" },
                { icon: "Users", title: "–û–ø—ã—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞", desc: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –±–∞—Ä–º–µ–Ω—ã —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –Ω–∞ VIP-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö" },
                { icon: "Clock", title: "–¢–æ—á–Ω–æ—Å—Ç—å –≤ —Å—Ä–æ–∫–∞—Ö", desc: "–í—Å–µ–≥–¥–∞ –ø—Ä–∏–µ–∑–∂–∞–µ–º –≤–æ–≤—Ä–µ–º—è –∏ —Ä–∞–±–æ—Ç–∞–µ–º –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫" }
              ].map((item, index) => (
                <Card key={index} className="text-center hover:shadow-xl transition-shadow border-0 bg-white">
                  <CardHeader>
                    <div className="flex justify-center mb-4">
                      <Icon name={item.icon} size={48} className="text-gold" />
                    </div>
                    <CardTitle className="text-xl font-semibold text-premium-black">{item.title}</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-600">{item.desc}</p>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* –¢–∏–ø—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-2 sm:px-4">
          <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 text-premium-black">
            –†–∞–±–æ—Ç–∞–µ–º —Å –ª—é–±—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏
          </h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto">
            {[
              { emoji: "üèõ", title: "–ü–ª–æ—â–∞–¥–∫–∏/–ª–æ—Ñ—Ç—ã", desc: "–¥–æ–º–∞—à–Ω–∏–π –±–∞—Ä-–ø–∞—Ä—Ç–Ω—ë—Ä —Å –∫–æ–º–∏—Å—Å–∏–µ–π" },
              { emoji: "üé∂", title: "–ö–æ–Ω—Ü–µ—Ä—Ç—ã/—Ñ–µ—Å—Ç–∏–≤–∞–ª–∏", desc: "revenue-share, wristband-—Å–∏—Å—Ç–µ–º–∞" },
              { emoji: "üè¢", title: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã –∏ MICE", desc: "–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã, —Ä–∞–±–æ—Ç–∞ –ø–æ –±–µ–∑–Ω–∞–ª—É" },
              { emoji: "üíç", title: "–°–≤–∞–¥—å–±—ã/–≤–µ—á–µ—Ä–∏–Ω–∫–∏", desc: "—Å—Ç–∏–ª—å, –∞–≤—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏, –∫–∞–ª—å—è–Ω-–∑–æ–Ω–∞" }
            ].map((item, index) => (
              <Card key={index} className="hover:shadow-xl transition-shadow border-0 bg-white">
                <CardHeader className="text-center">
                  <div className="text-4xl mb-4">{item.emoji}</div>
                  <CardTitle className="text-xl font-semibold text-premium-black">{item.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-600 text-center">{item.desc}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-2 sm:px-4 w-full max-w-full">
          <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 text-premium-black">
            5 –º–æ–¥–µ–ª–µ–π —Ä–∞–±–æ—Ç—ã –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏
          </h2>
          <div className="max-w-4xl mx-auto px-1 sm:px-0">
            <Card className="p-4 sm:p-8 border-2 border-gold/20 shadow-2xl">
              <CardHeader className="text-center">
                <CardTitle className="text-2xl text-premium-black mb-4">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏</CardTitle>
                <p className="text-gray-600">{getModelDescription(calculatorData.format)}</p>
              </CardHeader>
              <CardContent>
                <Tabs value={calculatorData.format} onValueChange={(value) => setCalculatorData({...calculatorData, format: value})}>
                  <TabsList className="grid w-full grid-cols-2 sm:grid-cols-5 mb-8">
                    <TabsTrigger value="openbar">Open Bar</TabsTrigger>
                    <TabsTrigger value="minimal">–ú–∏–Ω–∏–º–∞–ª–∫–∞</TabsTrigger>
                    <TabsTrigger value="revenue">Revenue</TabsTrigger>
                    <TabsTrigger value="fixfee">Fix-fee</TabsTrigger>
                    <TabsTrigger value="hookah">–ö–∞–ª—å—è–Ω</TabsTrigger>
                  </TabsList>
                  
                  <TabsContent value="openbar">
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <div>
                          <Label htmlFor="guests" className="text-base font-medium">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π</Label>
                          <Input
                            id="guests"
                            type="number"
                            value={calculatorData.guests}
                            onChange={(e) => setCalculatorData({...calculatorData, guests: parseInt(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                      </div>
                      
                      <div className="bg-gold/10 p-6 rounded-lg flex flex-col justify-center">
                        <div className="text-center">
                          <p className="text-lg text-gray-600 mb-4">–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞:</p>
                          <p className="text-4xl font-bold text-gold mb-6">{formatPrice(calculateCost())}</p>
                          <Button className="bg-gold hover:bg-gold-dark text-premium-black w-full">
                            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é —Å–º–µ—Ç—É
                          </Button>
                        </div>
                      </div>
                    </div>
                    
                    <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 mt-8">
                      {[
                        { key: 'light', name: 'Light', price: 1800 },
                        { key: 'classic', name: 'Classic', price: 2450 },
                        { key: 'premium', name: 'Premium', price: 3200 }
                      ].map((tariff) => (
                        <Card 
                          key={tariff.key}
                          className={`cursor-pointer transition-all border-2 ${
                            calculatorData.openbarTariff === tariff.key 
                              ? 'border-gold bg-gold/10' 
                              : 'border-gray-200 hover:border-gold/50'
                          }`}
                          onClick={() => setCalculatorData({...calculatorData, openbarTariff: tariff.key})}
                        >
                          <CardContent className="text-center p-6">
                            <h3 className="font-bold text-lg mb-2">{tariff.name} - {formatPrice(tariff.price)}</h3>
                            <p className="text-gray-600">–∑–∞ –≥–æ—Å—Ç—è</p>
                          </CardContent>
                        </Card>
                      ))}
                    </div>
                  </TabsContent>

                  <TabsContent value="minimal">
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <div>
                          <Label htmlFor="guests" className="text-base font-medium">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π</Label>
                          <Input
                            id="guests"
                            type="number"
                            value={calculatorData.guests}
                            onChange={(e) => setCalculatorData({...calculatorData, guests: parseInt(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                      </div>
                      
                      <div className="bg-gold/10 p-6 rounded-lg flex flex-col justify-center">
                        <div className="text-center">
                          <p className="text-lg text-gray-600 mb-4">–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</p>
                          <p className="text-4xl font-bold text-gold mb-6">{formatPrice(calculateCost())}</p>
                          <Button className="bg-gold hover:bg-gold-dark text-premium-black w-full">
                            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é —Å–º–µ—Ç—É
                          </Button>
                        </div>
                      </div>
                    </div>
                  </TabsContent>

                  <TabsContent value="revenue">
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <div>
                          <Label htmlFor="revenueGuests" className="text-base font-medium">–û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π</Label>
                          <Input
                            id="revenueGuests"
                            type="number"
                            value={calculatorData.revenueGuests}
                            onChange={(e) => setCalculatorData({...calculatorData, revenueGuests: parseInt(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                        <div>
                          <Label htmlFor="avgTicket" className="text-base font-medium">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ (‚ÇΩ)</Label>
                          <Input
                            id="avgTicket"
                            type="number"
                            value={calculatorData.avgTicket}
                            onChange={(e) => setCalculatorData({...calculatorData, avgTicket: parseFloat(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                        <div>
                          <Label htmlFor="partnerShare" className="text-base font-medium">–î–æ–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞ (%)</Label>
                          <Input
                            id="partnerShare"
                            type="number"
                            value={calculatorData.partnerShare}
                            onChange={(e) => setCalculatorData({...calculatorData, partnerShare: parseFloat(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                      </div>
                      
                      <div className="bg-gold/10 p-6 rounded-lg">
                        <h3 className="font-semibold mb-4">–†–∞—Å—á—ë—Ç –≤—ã—Ä—É—á–∫–∏:</h3>
                        {(() => {
                          const results = calculateCost();
                          if (typeof results === 'object') {
                            return (
                              <div className="space-y-2">
                                <div className="flex justify-between">
                                  <span>–û–±—â–∏–π –æ–±–æ—Ä–æ—Ç:</span>
                                  <span className="font-semibold">{formatPrice(results.revenue)}</span>
                                </div>
                                <div className="flex justify-between">
                                  <span>–ü–∞—Ä—Ç–Ω—ë—Ä—É (–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É):</span>
                                  <span className="text-red-600">{formatPrice(results.partnerProfit)}</span>
                                </div>
                                <hr className="my-2" />
                                <div className="flex justify-between text-lg font-bold">
                                  <span>–ù–∞—à–∞ –ø—Ä–∏–±—ã–ª—å:</span>
                                  <span className="text-green-600">{formatPrice(results.ourProfit)}</span>
                                </div>
                              </div>
                            );
                          }
                          return null;
                        })()}
                      </div>
                    </div>
                  </TabsContent>

                  <TabsContent value="fixfee">
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <div>
                          <Label htmlFor="barLines" className="text-base font-medium">–õ–∏–Ω–∏–∏ –±–∞—Ä–∞</Label>
                          <Input
                            id="barLines"
                            type="number"
                            value={calculatorData.barLines}
                            onChange={(e) => setCalculatorData({...calculatorData, barLines: parseInt(e.target.value) || 1})}
                            className="mt-2"
                          />
                        </div>
                        <div>
                          <Label htmlFor="hours" className="text-base font-medium">–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã</Label>
                          <Input
                            id="hours"
                            type="number"
                            value={calculatorData.hours}
                            onChange={(e) => setCalculatorData({...calculatorData, hours: parseInt(e.target.value) || 5})}
                            className="mt-2"
                          />
                        </div>
                        <div>
                          <Label htmlFor="peak" className="text-base font-medium">–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏</Label>
                          <Select value={calculatorData.peak.toString()} onValueChange={(value) => setCalculatorData({...calculatorData, peak: parseFloat(value)})}>
                            <SelectTrigger className="mt-2">
                              <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è" />
                            </SelectTrigger>
                            <SelectContent>
                              <SelectItem value="0">–ë—É–¥–Ω–∏ (0%)</SelectItem>
                              <SelectItem value="10">–ü—Ç/–°–± (+10%)</SelectItem>
                              <SelectItem value="15">–ù–æ—á—å/–ü—Ä–∞–∑–¥–Ω–∏–∫–∏ (+15%)</SelectItem>
                            </SelectContent>
                          </Select>
                        </div>
                        <div>
                          <Label htmlFor="regionFee" className="text-base font-medium">–ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –ª–æ–∫–∞—Ü–∏—é (‚ÇΩ)</Label>
                          <Input
                            id="regionFee"
                            type="number"
                            value={calculatorData.regionFee}
                            onChange={(e) => setCalculatorData({...calculatorData, regionFee: parseFloat(e.target.value) || 0})}
                            className="mt-2"
                            placeholder="0 - –≤ –≥–æ—Ä–æ–¥–µ, 10000 - –∑–∞ –≥–æ—Ä–æ–¥–æ–º"
                          />
                        </div>
                      </div>
                      
                      <div className="bg-gold/10 p-6 rounded-lg flex flex-col justify-center">
                        <div className="text-center">
                          <p className="text-lg text-gray-600 mb-4">–°—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–µ–∑–¥–∞:</p>
                          <p className="text-4xl font-bold text-gold mb-6">{formatPrice(calculateCost())}</p>
                          <Button className="bg-gold hover:bg-gold-dark text-premium-black w-full">
                            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é —Å–º–µ—Ç—É
                          </Button>
                        </div>
                      </div>
                    </div>
                  </TabsContent>

                  <TabsContent value="hookah">
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <div>
                          <Label htmlFor="hookahQty" className="text-base font-medium">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª—å—è–Ω–æ–≤</Label>
                          <Input
                            id="hookahQty"
                            type="number"
                            value={calculatorData.hookahQty}
                            onChange={(e) => setCalculatorData({...calculatorData, hookahQty: parseInt(e.target.value) || 0})}
                            className="mt-2"
                          />
                        </div>
                        <div>
                          <Label htmlFor="hookahPrice" className="text-base font-medium">–¶–µ–Ω–∞ –∑–∞ –∫–∞–ª—å—è–Ω (‚ÇΩ)</Label>
                          <Input
                            id="hookahPrice"
                            type="number"
                            value={calculatorData.hookahPrice}
                            onChange={(e) => setCalculatorData({...calculatorData, hookahPrice: parseFloat(e.target.value) || 3000})}
                            className="mt-2"
                          />
                        </div>
                      </div>
                      
                      <div className="bg-gold/10 p-6 rounded-lg flex flex-col justify-center">
                        <div className="text-center">
                          <p className="text-lg text-gray-600 mb-4">–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–ª—å—è–Ω–æ–≤:</p>
                          <p className="text-4xl font-bold text-gold mb-6">{formatPrice(calculateCost())}</p>
                          <Button className="bg-gold hover:bg-gold-dark text-premium-black w-full">
                            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é —Å–º–µ—Ç—É
                          </Button>
                        </div>
                      </div>
                    </div>
                  </TabsContent>
                </Tabs>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section className="py-20 bg-gray-50">
        <div className="container mx-auto px-2 sm:px-4">
          <div className="max-w-4xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 text-premium-black">
              –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
            </h2>
            <Accordion type="single" collapsible className="w-full space-y-4">
              <AccordionItem value="item-1" className="bg-white rounded-lg px-6">
                <AccordionTrigger className="text-left hover:no-underline">
                  –ö–∞–∫–æ–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑?
                </AccordionTrigger>
                <AccordionContent>
                  –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 80 000 —Ä—É–±–ª–µ–π –∏–ª–∏ 50 —á–µ–ª–æ–≤–µ–∫. –≠—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å—é –ø–æ–∫—Ä—ã—Ç–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ.
                </AccordionContent>
              </AccordionItem>

              <AccordionItem value="item-2" className="bg-white rounded-lg px-6">
                <AccordionTrigger className="text-left hover:no-underline">
                  –ó–∞ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –Ω—É–∂–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å?
                </AccordionTrigger>
                <AccordionContent>
                  –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞ 2-3 –Ω–µ–¥–µ–ª–∏ –¥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –í –≤—ã—Å–æ–∫–∏–π —Å–µ–∑–æ–Ω (–º–∞–π-—Å–µ–Ω—Ç—è–±—Ä—å) –ª—É—á—à–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞ –º–µ—Å—è—Ü.
                </AccordionContent>
              </AccordionItem>

              <AccordionItem value="item-3" className="bg-white rounded-lg px-6">
                <AccordionTrigger className="text-left hover:no-underline">
                  –†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã —Å –±–µ–∑–Ω–∞–ª–∏—á–Ω—ã–º —Ä–∞—Å—á—ë—Ç–æ–º?
                </AccordionTrigger>
                <AccordionContent>
                  –î–∞, –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –∫–∞–∫ —Å –Ω–∞–ª–∏—á–Ω—ã–º, —Ç–∞–∫ –∏ —Å –±–µ–∑–Ω–∞–ª–∏—á–Ω—ã–º —Ä–∞—Å—á—ë—Ç–æ–º. –î–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
                </AccordionContent>
              </AccordionItem>

              <AccordionItem value="item-4" className="bg-white rounded-lg px-6">
                <AccordionTrigger className="text-left hover:no-underline">
                  –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å?
                </AccordionTrigger>
                <AccordionContent>
                  –í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Ö–æ–¥–∏—Ç: –∞–ª–∫–æ–≥–æ–ª—å, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –±–∞—Ä–º–µ–Ω—ã, –±–∞—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –ª—ë–¥, —Ñ—Ä—É–∫—Ç—ã –¥–ª—è –∫–æ–∫—Ç–µ–π–ª–µ–π, –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è –ø–æ—Å—É–¥–∞, —É–±–æ—Ä–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞.
                </AccordionContent>
              </AccordionItem>
            </Accordion>
          </div>
        </div>
      </section>

      {/* CTA —Å–µ–∫—Ü–∏—è */}
      <section className="py-20 bg-premium-black text-white">
        <div className="container mx-auto text-center px-2 sm:px-4">
          <h2 className="text-4xl md:text-5xl font-bold mb-8 leading-tight">
            –ì–æ—Ç–æ–≤—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–º?
          </h2>
          <p className="text-xl mb-12 text-gray-300 max-w-2xl mx-auto">
            –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ —Ç–æ—á–Ω—ã–π —Ä–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button size="lg" className="bg-gold hover:bg-gold-dark text-premium-black font-semibold px-8 py-4 text-lg">
              <Icon name="Phone" size={20} className="mr-2" />
              –ü–æ–∑–≤–æ–Ω–∏—Ç—å —Å–µ–π—á–∞—Å
            </Button>
            <Button size="lg" variant="outline" className="border-gold text-gold hover:bg-gold hover:text-premium-black font-semibold px-8 py-4 text-lg">
              <Icon name="MessageCircle" size={20} className="mr-2" />
              –ù–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp
            </Button>
          </div>
        </div>
      </section>

      {/* –§—É—Ç–µ—Ä */}
      <footer className="bg-gray-900 text-white py-12">
        <div className="container mx-auto px-2 sm:px-4">
          <div className="grid md:grid-cols-3 gap-8 text-center md:text-left">
            <div>
              <h3 className="text-xl font-bold mb-4 text-gold">–í–ò–ü –ë–∞—Ä –°–µ—Ä–≤–∏—Å</h3>
              <p className="text-gray-400">
                –ü—Ä–µ–º–∏–∞–ª—å–Ω–æ–µ –±–∞—Ä–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–æ–±—ã—Ç–∏–π
              </p>
            </div>
            <div>
              <h3 className="text-xl font-bold mb-4">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
              <div className="space-y-2 text-gray-400">
                <p>+7 (999) 123-45-67</p>
                <p>info@vipbar.ru</p>
                <p>–ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 123</p>
              </div>
            </div>
            <div>
              <h3 className="text-xl font-bold mb-4">–£—Å–ª—É–≥–∏</h3>
              <div className="space-y-2 text-gray-400">
                <p>–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</p>
                <p>–°–≤–∞–¥—å–±—ã –∏ —Ç–æ—Ä–∂–µ—Å—Ç–≤–∞</p>
                <p>–ß–∞—Å—Ç–Ω—ã–µ –≤–µ—á–µ—Ä–∏–Ω–∫–∏</p>
                <p>–§–µ—Å—Ç–∏–≤–∞–ª–∏ –∏ –∫–æ–Ω—Ü–µ—Ä—Ç—ã</p>
              </div>
            </div>
          </div>
          <div className="border-t border-gray-800 mt-8 pt-8 text-center text-gray-500">
            <p>&copy; 2024 –í–ò–ü –ë–∞—Ä –°–µ—Ä–≤–∏—Å. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;